/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'com.gradle.plugin-publish' version "1.1.0"
}

sourceCompatibility = 11
targetCompatibility = 11

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}


compileJava {
    options.encoding = 'UTF-8'
}

// Configure the plugin portal URL
// gradlePluginPortal {
//     credentials {
//         username = System.getProperty("gradle.plugin.portal.username")
//         password = System.getProperty("gradle.plugin.portal.password")
//     }
// }

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    gradlePluginPortal()
    google()
}


jar {
    archiveBaseName = "gradle-semantic-versioning-manager-plugin"
    from("$rootProject.projectDir/gradle-plugins") {
        into "META-INF/gradle-plugins"
    }
}


tasks.withType(Test).configureEach {
    it.jvmArgs = ["--add-opens=java.base/java.lang=ALL-UNNAMED"]
}

dependencies {

    implementation gradleApi()

    // https://mvnrepository.com/artifact/org.json/json
    implementation 'org.json:json:20220924'



    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
}

application {
    // Define the main class for the application.
    mainClass = 'gradle.simple.versioning.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
