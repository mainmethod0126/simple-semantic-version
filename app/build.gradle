/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "gradle.plugin.com.github.johnrengelman:shadow:7.1.2"
    }
}

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'com.gradle.plugin-publish' version '1.1.0'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'java-gradle-plugin'
}





apply plugin: 'com.github.johnrengelman.shadow'


group = 'org.mainmethod0126'
version = "0.1.0"
sourceCompatibility = 11
targetCompatibility = 11

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}


compileJava {
    options.encoding = 'UTF-8'
}

gradlePlugin {
    website = 'https://github.com/mainmethod0126/simple-semantic-version'
    vcsUrl = 'https://github.com/mainmethod0126/simple-semantic-version'
    version = version
    plugins {
        greetingsPlugin {
            id = 'org.mainmethod0126.simple-semantic-version'
            displayName = 'This is a plug-in for convenient semantic versioning' 
            description = 'This is a plug-in for convenient semantic versioning'
            tags.set(['java', 'versioning', 'semantic', 'plugins'])
            implementationClass = 'org.mainmethod0126.gradle.simple.versioning.SemanticVersionManager'
        }
    }
}


repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    gradlePluginPortal()
    google()
}


shadowJar {
    baseName = "gradle-semantic-versioning-manager-plugin"
    version = version
    classifier = null
}

tasks.withType(Test).configureEach {
    it.jvmArgs = ["--add-opens=java.base/java.lang=ALL-UNNAMED"]
}

dependencies {

    implementation gradleApi()

    // https://mvnrepository.com/artifact/org.json/json
    implementation 'org.json:json:20220924'



    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
}

application {
    // Define the main class for the application.
    mainClass = 'org.mainmethod0126.gradle.simple.versioning.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
