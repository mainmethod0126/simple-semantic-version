# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: gradle custom plugin release

on:
  push:
    branches:
      - gtihub-action-gradle-custom-plugin-release

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      VERSION: ""

    steps:
    - name: taging
      shell: bash
      run: |

        echo $(Pipeline.Workspace)

        cd $(Pipeline.Workspace)

        echo "$(pwd)"

        # I have determined that there is no need to include metadata in the tagging information
        temp_major=`node -p "const p = require('$(Pipeline.Workspace)/version.json'); p.major;"`
        temp_minor=`node -p "const p = require('$(Pipeline.Workspace)/version.json'); p.minor;"`
        temp_patch=`node -p "const p = require('$(Pipeline.Workspace)/version.json'); p.patch;"`
        temp_prereleaseVersion=`node -p "const p = require('$(Pipeline.Workspace)/version.json'); p.prereleaseVersion;"`

        version="$temp_major$temp_minor$temp_patch$temp_prereleaseVersion"
        echo "VERSION = $version"

        git tag "$version"
        git push -u origin HEAD:main "$version"

    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: build

    # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
    # the publishing section of your build.gradle
    - name: Publish to GitHub Packages
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: publish
      env:
        USERNAME: ${{ github.actor }}
        TOKEN: ${{ secrets.GITHUB_TOKEN }}
